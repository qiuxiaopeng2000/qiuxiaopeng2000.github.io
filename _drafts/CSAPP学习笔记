## bit

### 补码
无符号数的减法：把减数用有符号数的补码方法进行计算，但是结果用无符号的规则显示

将一个数取负：将所有位（包括符号位，也包括有符号和无符号类型）取反，然后加上1

为了避免出现无符号数与有符号数相加减的问题（编译器会自动将有符号数转化为无符号数，这容易产生bug），应该尽量避免使用无符号数，用有符号数代替无符号数

### 浮点数
由符号位、阶码（指数）位、尾数位

指数位：不能全为0或全为1，使用无符号整数表示，即原来的实际值加上一个偏置值，偏置值的值为$bias = 2^(k-1) - 1$，其中k表示指数位的位数。
当指数位全为0时尾数位不需要考虑隐藏位的1，此时的指数表示$1 - bias$，即表示接近于0很小的数：0.XXXXXXX
当指数位全为1时，若尾数全为0则表示该浮点数位无穷大，若尾数不为0则表示该数字（计算结果）不存在（NaN）

尾数位：形式位1.xxxx，由于所有的尾数位整数部分都是1，因此计算机默认将1省去，尾数位只存储小数部分，源码表示

用上述方法表示浮点数，整数0可以被表示成浮点0，不同类型的数据之间有相通性。
